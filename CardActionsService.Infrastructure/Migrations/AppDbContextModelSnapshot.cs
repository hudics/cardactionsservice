// <auto-generated />
using CardActionsService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CardActionsService.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("CardActionsService.Infrastructure.Entities.AllowedAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("CardActionsService.Infrastructure.Entities.CardAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RequiresPin")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CardType", "CardStatus", "ActionId")
                        .IsUnique();

                    b.ToTable("CardActions");
                });

            modelBuilder.Entity("CardActionsService.Infrastructure.Entities.CardAction", b =>
                {
                    b.HasOne("CardActionsService.Infrastructure.Entities.AllowedAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");
                });
#pragma warning restore 612, 618
        }
    }
}
